import datetime

from django.conf import settings
from django.db import models
from django.urls import reverse
from django.utils.text import slugify
from django.utils import timezone
# from django.contrib.auth.models import User

# from mysite.storage_backends import PublicMediaStorage, PrivateMediaStorage


class Page(models.Model):
    """ Represents a single Page. """
    objects = models.Manager()

    title = models.CharField(
        max_length=settings.TITLE_MAX_LENGTH, unique=True, default="Title of your page.")
    # author = models.ForeignKey(
    #     settings.AUTH_USER_MODEL, on_delete=models.PROTECT, help_text="The user that posted this article.")
    slug = models.CharField(max_length=settings.TITLE_MAX_LENGTH, blank=True, editable=False,
                            help_text="Unique URL path to access this page's page. Generated by the system.")

    created = models.DateTimeField(
        auto_now_add=True, help_text="The date and time this page was created. Automatically generated when the model saves.")
    modified = models.DateTimeField(
        auto_now=True, help_text="The date and time this page was updated. Automatically generated when the model updates.")

    content = models.TextField(default="Write the content of your page here.")
    sources = models.URLField(null=True, blank=True)

    # main_img = models.ImageField(upload_to='main_images/', null=True)
    # main_img2 = models.ImageField(
    #     upload_to='main_images/', null=True, blank=True)
    # main_img3 = models.ImageField(
    #     upload_to='main_images/', null=True, blank=True)
    # main_img4 = models.ImageField(
    #     upload_to='main_images/', null=True, blank=True)

    def __str__(self):
        return self.title

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/my-new-page). """
        path_components = {'slug': self.slug}
        return reverse('page-details', kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new a page is created. """
        self.slug = slugify(self.title, allow_unicode=True)
        # Call save on the superclass.
        return super(Page, self).save(*args, **kwargs)
